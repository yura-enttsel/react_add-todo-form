{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","React","memo","todos","map","todosWithUsers","userId","usersFromServer","find","App","useState","setTodos","selectedUserId","setSelectedUserId","newTitle","setNewTitle","isInvalidField","setIsInvalidField","handleChange","event","target","value","type","currentIsInvalid","action","method","onSubmit","preventDefault","trim","newTodo","Math","max","Number","currentTodos","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f2b8287f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    completed,\n    title,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = React.memo(\n  ({ todos }) => (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  ),\n);\n","import './App.scss';\nimport { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './components/types/User';\nimport { Todo } from './components/types/Todo';\nimport { TodoList } from './components/TodoList';\n\nexport const todosWithUsers: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find((user: User) => user.id === todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(todosWithUsers);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const [isInvalidField, setIsInvalidField] = useState({\n    userId: false,\n    title: false,\n  });\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setIsInvalidField(currentIsInvalid => ({\n      ...currentIsInvalid,\n      userId: selectedUserId === '',\n      title: newTitle.trim() === '',\n    }));\n\n    if (selectedUserId && newTitle.trim()) {\n      const newTodo: Todo = {\n        id: Math.max(...todosWithUsers.map(todo => todo.id)) + 1,\n        userId: Number(selectedUserId),\n        title: newTitle,\n        completed: false,\n        user: usersFromServer\n          .find((user: User) => user.id === Number(selectedUserId)),\n      };\n\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      setNewTitle('');\n      setSelectedUserId('');\n    }\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { value, type } = event.target;\n    const TEXT_INPUT = 'text';\n\n    if (type === TEXT_INPUT) {\n      setNewTitle(value);\n      setIsInvalidField(currentIsInvalid => ({\n        ...currentIsInvalid,\n        title: false,\n      }));\n    } else {\n      setSelectedUserId(value);\n      setIsInvalidField(currentIsInvalid => ({\n        ...currentIsInvalid,\n        userId: false,\n      }));\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTitle}\n              onChange={handleChange}\n            />\n          </label>\n\n          {isInvalidField.title && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:\n            <select\n              name=\"user id\"\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleChange}\n            >\n              <option value=\"\" disabled>\n                Choose a user\n              </option>\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isInvalidField.userId && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}